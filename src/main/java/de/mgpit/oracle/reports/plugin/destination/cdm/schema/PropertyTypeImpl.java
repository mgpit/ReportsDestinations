/* DO NOT EDIT THIS FILE - This file was generated by     */
/* Oracle JAXB Class Generator Implementation.            */
/* Any Modification to this file will be lost upon        */
/* recompilation of source schema                         */ 

package de.mgpit.oracle.reports.plugin.destination.cdm.schema;


public class PropertyTypeImpl extends oracle.xml.jaxb.JaxbNode implements de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertyType
{
   public PropertyTypeImpl(oracle.xml.parser.v2.XMLDocument ownerDoc)
   {
      super("property", "", ownerDoc); 
   }

   public PropertyTypeImpl(java.lang.String name, java.lang.String namespace, oracle.xml.parser.v2.XMLDocument ownerDoc)
   {
      super(name, namespace, ownerDoc);
   }

   public PropertyTypeImpl(oracle.xml.parser.v2.XMLElement node)
   {
      super(node);
   }

   public void setKey(java.lang.String value)
   {
      java.lang.String lexval = oracle.xml.jaxb.JaxbDatatypeConverter.printString(value);
      super.setJaxbElement("key", "", lexval, 0);
   }

   public java.lang.String getKey()
   {
      java.lang.String lexval = super.getJaxbElement("key", "", 0);
      return oracle.xml.jaxb.JaxbDatatypeConverter.parseString(lexval);
   }

   public void setValue(java.lang.String value)
   {
      java.lang.String lexval = oracle.xml.jaxb.JaxbDatatypeConverter.printString(value);
      super.setJaxbElement("value", "", lexval, 1);
   }

   public java.lang.String getValue()
   {
      java.lang.String lexval = super.getJaxbElement("value", "", 1);
      return oracle.xml.jaxb.JaxbDatatypeConverter.parseString(lexval);
   }

   public void populateNodeArray(oracle.xml.parser.v2.XMLNode node)
   {
      java.lang.String name, namespace;
      oracle.xml.parser.v2.XMLNode n = (oracle.xml.parser.v2.XMLNode)node.getFirstChild();

      int i = 0;
      while (n != null)
      {
         name = n.getLocalName(); 
         namespace = n.getNamespaceURI();

         if (name == null)
         {
            n = (oracle.xml.parser.v2.XMLNode)n.getNextSibling();
            i++;
            continue;
         }

         if (namespace == null)
            namespace = "";

         if (name != null)
         {
            if (name.equals("key") && namespace.equals(""))
            {
               super.setNodeArrayValue(0, n);
            }

         }
         if (name != null)
         {
            if (name.equals("value") && namespace.equals(""))
            {
               super.setNodeArrayValue(1, n);
            }

         }
         n = (oracle.xml.parser.v2.XMLNode)n.getNextSibling();
         i++;
      }

      super.populateNodeArray(node);
   }

   static final Object[] _PropertyType = 
   {"key", "value"};

   protected Object[] getSchemaObject()
   {
      return _PropertyType;
   }

}
