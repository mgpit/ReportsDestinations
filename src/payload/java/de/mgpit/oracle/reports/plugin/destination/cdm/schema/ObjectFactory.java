//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.27 at 01:03:26 CET 
//


package de.mgpit.oracle.reports.plugin.destination.cdm.schema;

import javax.xml.bind.JAXBException;
import javax.xml.bind.PropertyException;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the de.mgpit.oracle.reports.plugin.destination.cdm.schema package. <p>An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content. The Java representation of XML content can consist of schema derived interfaces and classes representing the binding of schema type definitions, element declarations and model groups.  Factory methods for each of these are provided in this class.
 * 
 */
public class ObjectFactory
    extends com.sun.xml.bind.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();

    static {
        defaultImplementations.put((de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertiesType.class), (de.mgpit.oracle.reports.plugin.destination.cdm.schema.impl.PropertiesTypeImpl.class));
        defaultImplementations.put((de.mgpit.oracle.reports.plugin.destination.cdm.schema.ContentType.class), (de.mgpit.oracle.reports.plugin.destination.cdm.schema.impl.ContentTypeImpl.class));
        defaultImplementations.put((de.mgpit.oracle.reports.plugin.destination.cdm.schema.CdmdocType.class), (de.mgpit.oracle.reports.plugin.destination.cdm.schema.impl.CdmdocTypeImpl.class));
        defaultImplementations.put((de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertyType.class), (de.mgpit.oracle.reports.plugin.destination.cdm.schema.impl.PropertyTypeImpl.class));
        defaultImplementations.put((de.mgpit.oracle.reports.plugin.destination.cdm.schema.Cdmdoc.class), (de.mgpit.oracle.reports.plugin.destination.cdm.schema.impl.CdmdocImpl.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: de.mgpit.oracle.reports.plugin.destination.cdm.schema
     * 
     */
    public ObjectFactory() {
        super(new de.mgpit.oracle.reports.plugin.destination.cdm.schema.ObjectFactory.GrammarInfoImpl());
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface the Class object of the javacontent interface to instantiate
     * @return a new instance
     * @throws JAXBException if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @return the value of the requested property
     * @throws PropertyException when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @param value the value of the property to be set
     * @throws PropertyException when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of PropertiesType
     * 
     * @throws JAXBException if an error occurs
     */
    public de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertiesType createPropertiesType()
        throws javax.xml.bind.JAXBException
    {
        return ((de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertiesType) newInstance((de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertiesType.class)));
    }

    /**
     * Create an instance of ContentType
     * 
     * @throws JAXBException if an error occurs
     */
    public de.mgpit.oracle.reports.plugin.destination.cdm.schema.ContentType createContentType()
        throws javax.xml.bind.JAXBException
    {
        return ((de.mgpit.oracle.reports.plugin.destination.cdm.schema.ContentType) newInstance((de.mgpit.oracle.reports.plugin.destination.cdm.schema.ContentType.class)));
    }

    /**
     * Create an instance of CdmdocType
     * 
     * @throws JAXBException if an error occurs
     */
    public de.mgpit.oracle.reports.plugin.destination.cdm.schema.CdmdocType createCdmdocType()
        throws javax.xml.bind.JAXBException
    {
        return ((de.mgpit.oracle.reports.plugin.destination.cdm.schema.CdmdocType) newInstance((de.mgpit.oracle.reports.plugin.destination.cdm.schema.CdmdocType.class)));
    }

    /**
     * Create an instance of PropertyType
     * 
     * @throws JAXBException if an error occurs
     */
    public de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertyType createPropertyType()
        throws javax.xml.bind.JAXBException
    {
        return ((de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertyType) newInstance((de.mgpit.oracle.reports.plugin.destination.cdm.schema.PropertyType.class)));
    }

    /**
     * Create an instance of Cdmdoc
     * 
     * @throws JAXBException if an error occurs
     */
    public de.mgpit.oracle.reports.plugin.destination.cdm.schema.Cdmdoc createCdmdoc()
        throws javax.xml.bind.JAXBException
    {
        return ((de.mgpit.oracle.reports.plugin.destination.cdm.schema.Cdmdoc) newInstance((de.mgpit.oracle.reports.plugin.destination.cdm.schema.Cdmdoc.class)));
    }

    private static class GrammarInfoImpl
        extends com.sun.xml.bind.GrammarInfo
    {


        public java.lang.Class getDefaultImplementation(java.lang.Class javaContentInterface) {
            return ((java.lang.Class) defaultImplementations.get(javaContentInterface));
        }

        public java.lang.Class getRootElement(java.lang.String uri, java.lang.String local) {
            if (("" == uri)&&("cdmdoc" == local)) {
                return (de.mgpit.oracle.reports.plugin.destination.cdm.schema.impl.CdmdocImpl.class);
            }
            return null;
        }

        public java.lang.String[] getProbePoints() {
            return new java.lang.String[] {"", "cdmdoc"};
        }

    }

}
